plugins {
  id 'cpp-library'
  id 'maven-publish'
  id 'visual-studio'
}



library {

    linkage = [ Linkage.SHARED ]
    
    targetMachines = [
      machines.linux.x86_64,
      machines.windows.x86_64,
      machines.macOS.x86_64
    ]
    
    source.from createCppTree(project)

    privateHeaders {
    	from file('src/main/headers')
    	from file(getJNIPlatformIncludeDir())
    	from file(getJNIIncludeDir())
    }
    
    binaries.configureEach { binary ->
      def compileTask = compileTask.get()
      def linkTask = linkTask.get()
      
      configureToolchain(toolChain)
      configureLinker(targetMachine, linkTask)
      addJNIIncludes(compileTask)
      
      if (targetMachine.operatingSystemFamily.windows) { 
        compileTask.macros.put("DRIFTGL_WGL", null)
      } else if (targetMachine.operatingSystemFamily.macOs) {
        compileTask.macros.put("DRIFTGL_CGL", null)
        compileTask.macros.put("GL_SILENCE_DEPRECATION", null)
      } else if (targetMachine.operatingSystemFamily.linux) {
        compileTask.macros.put("DRIFTGL_GLX", null)
      }  
    }
    
}

tasks.withType(CppCompile).configureEach {
  compilerArgs.add '-std=c++11'
}

publishing {
    repositories {
        maven {
          url = "../../native-repo"
        }
    }
}