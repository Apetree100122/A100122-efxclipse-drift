name: DriftFX Build

on: [push]

jobs:
  build-natives:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Libraries
      run: |
        sudo apt-get update
        sudo apt-get install -y mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev
      if: runner.os == 'Linux'
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/checkout@v2
    - uses: eskatos/gradle-command-action@v1
      with:
        build-root-directory: native-gradle
        wrapper-directory: native-gradle
        arguments: publish
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v1
      with:
        name: native-repo
        path: native-repo
        

  build-maven:
    needs: build-natives
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Fetch natives
      uses: actions/download-artifact@v1
      with:
        name: native-repo
        path: native-repo
    - name: Copy natives to source tree
      run: |
        cp native-repo/org/eclipse/fx/drift/driftfx_release_windows/1.0.0.$GITHUB_SHA/driftfx_release_windows-1.0.0.$GITHUB_SHA.dll org.eclipse.fx.drift/natives/driftfx.dll
        cp native-repo/org/eclipse/fx/drift/driftcpp_release_windows/1.0.0.$GITHUB_SHA/driftcpp_release_windows-1.0.0.$GITHUB_SHA.dll org.eclipse.fx.drift/natives/driftcpp.dll
        cp native-repo/org/eclipse/fx/drift/driftfx_release_macos/1.0.0.$GITHUB_SHA/driftfx_release_macos-1.0.0.$GITHUB_SHA.dylib org.eclipse.fx.drift/natives/libdriftfx.dylib
        cp native-repo/org/eclipse/fx/drift/driftcpp_release_macos/1.0.0.$GITHUB_SHA/driftcpp_release_macos-1.0.0.$GITHUB_SHA.dylib org.eclipse.fx.drift/natives/libdriftcpp.dylib
        cp native-repo/org/eclipse/fx/drift/driftfx_release_linux/1.0.0.$GITHUB_SHA/driftfx_release_linux-1.0.0.$GITHUB_SHA.so org.eclipse.fx.drift/natives/libdriftfx.so
        cp native-repo/org/eclipse/fx/drift/driftcpp_release_linux/1.0.0.$GITHUB_SHA/driftfx_release_linux-1.0.0.$GITHUB_SHA.so org.eclipse.fx.drift/natives/libdriftcpp.so
    - name: Setup Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        java-package: jdk
    - name: Store Java 11 Home
      run: echo ::set-env name=JAVA_HOME_11::$JAVA_HOME
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        java-package: jdk+fx
    - name: Store Java 1.8 Home
      run: echo ::set-env name=JAVA_HOME_8::$JAVA_HOME
    - name: Create maven toolchains.xml
      run: |
        echo "<toolchains>" > ~/.m2/toolchains.xml
        echo " <toolchain>" >> ~/.m2/toolchains.xml
        echo "  <type>jdk</type>" >> ~/.m2/toolchains.xml
        echo "  <provides>" >> ~/.m2/toolchains.xml
        echo "   <version>1.8</version>" >> ~/.m2/toolchains.xml
        echo "  </provides>" >> ~/.m2/toolchains.xml
        echo "  <configuration>" >> ~/.m2/toolchains.xml
        echo "   <jdkHome>${JAVA_HOME_8}</jdkHome>" >> ~/.m2/toolchains.xml
        echo "  </configuration>" >> ~/.m2/toolchains.xml
        echo " </toolchain>" >> ~/.m2/toolchains.xml
        echo " <toolchain>" >> ~/.m2/toolchains.xml
        echo "  <type>jdk</type>" >> ~/.m2/toolchains.xml
        echo "  <provides>" >> ~/.m2/toolchains.xml
        echo "   <version>11</version>" >> ~/.m2/toolchains.xml
        echo "  </provides>" >> ~/.m2/toolchains.xml
        echo "  <configuration>" >> ~/.m2/toolchains.xml
        echo "   <jdkHome>${JAVA_HOME_11}</jdkHome>" >> ~/.m2/toolchains.xml
        echo "  </configuration>" >> ~/.m2/toolchains.xml
        echo " </toolchain>" >> ~/.m2/toolchains.xml
        echo "</toolchains>" >> ~/.m2/toolchains.xml
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    