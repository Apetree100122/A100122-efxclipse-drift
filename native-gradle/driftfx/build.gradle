plugins {
  id 'cpp-library'
}



library {

    linkage = [ Linkage.SHARED ]
    
    targetMachines = [
      machines.linux.x86_64,
      machines.windows.x86_64,
      machines.macOS.x86_64
    ]
    
    source {
      def cppTree = project.fileTree('src')
      cppTree.exclude '**/macos/*'
      cppTree.exclude '**/linux/*'

      configureSourceTree(cppTree)
      //configureSourceTree(cppTree)
      
      from cppTree
    }
    
    binaries.configureEach { binary ->
      def compileTask = compileTask.get()
      def linkTask = linkTask.get()
      
      configureToolchain(toolChain)
      configureLinker(targetMachine, linkTask)
      addJNIIncludes(compileTask)
      
      if (targetMachine.operatingSystemFamily.windows) { 
        compileTask.macros.put("DRIFTGL_WGL", null)
      } else if (targetMachine.operatingSystemFamily.macOs) {
        compileTask.macros.put("DRIFTGL_CGL", null)
      } else if (targetMachine.operatingSystemFamily.linux) {
        compileTask.macros.put("DRIFTGL_GLX", null)
      }  
    }
    
}
